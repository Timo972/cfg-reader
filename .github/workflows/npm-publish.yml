name: Node.js Package

on:
  push:
    branches-ignore:
      - '**'
    tags:
      - '*.*.*-rc*'
      - '*.*.*'

jobs:
  build:
    name: Build & Test
    runs-on: windows-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x, 15.x]
    steps:
      - uses: actions/checkout@v2
        name: Checkout
        with:
          submodules: true
          lfs: true

      - uses: actions/setup-node@v1
        name: Setup Node.js ${{ matrix.node-version }}
        with:
          node-version: ${{ matrix.node-version }}

      - uses: actions/cache@v2
        id: cache
        env:
            cache-name: cache-node-modules
        with:
            key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
            path: |
                ~/.npm
                node_modules
            restore-keys: |
                ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install

      - run: npm build
        name: Build
      
      - run: npm test
        name: Test

  publish-npm:
    needs: build
    runs-on: windows-latest
    name: Build & Publish
    steps:
      - uses: actions/checkout@v2
        name: Checkout
        with:
          submodules: true
          lfs: true

      - uses: actions/setup-node@v2
        name: Setup Node.js 14
        with:
          node-version: 14
          registry-url: https://registry.npmjs.org/

      - uses: actions/cache@v2
        id: cache
        env:
            cache-name: cache-node-modules-pnpm
        with:
            key: ${{ runner.os }}-pnpm-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
            path: |
                ~/.npm
                node_modules
            restore-keys: |
                ${{ runner.os }}-pnpm-${{ env.cache-name }}-

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install

      - run: npm build
        name: Build

      - name: Extract version
        id: version
        shell: bash
        run: |
          TAG=${GITHUB_REF/refs\/tags\//}
          echo ::set-output name=TAG::${TAG}

      - name: Bump package.json version
        shell: bash
        run: echo "`jq '.version="${{ steps.version.outputs.TAG }}"' package.json`" > package.json

      - run: npm publish --tag next
        if: contains(steps.version.outputs.TAG, 'rc')
        name: Publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}

      - run: npm publish
        name: Publish
        if: "!contains(steps.version.outputs.TAG, 'rc')"
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}

  publish-gpr:
    needs: build
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout
        with:
          submodules: true
          lfs: true

      - uses: actions/setup-node@v2
        name: Setup Node.js 14
        with:
          node-version: 14
          registry-url: https://npm.pkg.github.com/

      - uses: actions/cache@v2
        id: cache
        env:
            cache-name: cache-node-modules-pgpr
        with:
            key: ${{ runner.os }}-pgpr-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
            path: |
                ~/.npm
                node_modules
            restore-keys: |
                ${{ runner.os }}-pgpr-${{ env.cache-name }}-

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install

      - run: npm build
        name: Build

      - name: Extract version
        id: version
        shell: bash
        run: |
          TAG=${GITHUB_REF/refs\/tags\//}
          echo ::set-output name=TAG::${TAG}

      - name: Bump package.json version
        shell: bash
        run: echo "`jq '.version="${{ steps.version.outputs.TAG }}"' package.json`" > package.json

      - run: npm publish --tag next
        if: contains(steps.version.outputs.TAG, 'rc')
        name: Publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - run: npm publish
        name: Publish
        if: "!contains(steps.version.outputs.TAG, 'rc')"
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
